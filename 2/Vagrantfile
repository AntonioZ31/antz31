# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :otuslinux => {
        :box_name => "centos/7",
       	:disks => {
		:sata1 => {
			:dfile => './sata1.vdi',
			:size => 250,
			:port => 1
		},
		:sata2 => {
                        :dfile => './sata2.vdi',
                        :size => 250, # Megabytes
			:port => 2
		},
                :sata3 => {
                        :dfile => './sata3.vdi',
                        :size => 250,
                        :port => 3
                },
                :sata4 => {
                        :dfile => './sata4.vdi',
                        :size => 250, # Megabytes
                        :port => 4
                },
                :sata5 => {
                        :dfile => './sata5.vdi',
                        :size => 250,
                        :port => 5
                }
	}

		
  },
}

VAGRANT_CONTROLLER_NAME = "SATA"

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

      box.vm.box = boxconfig[:box_name]
      box.vm.host_name = boxname.to_s

      box.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--memory", "1024"]
        needsController = false
        boxconfig[:disks].each do |_, dconf|
          unless File.exist?(dconf[:dfile])
            vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
            needsController =  true
          end
        end
        if needsController == true
          vb.customize ["storagectl", :id, "--name", VAGRANT_CONTROLLER_NAME, "--add", "sata"]
          boxconfig[:disks].each do |_, dconf|
            vb.customize ['storageattach', :id, '--storagectl', VAGRANT_CONTROLLER_NAME, '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
          end
        end
      end

      box.vm.provision "shell", inline: <<-SHELL
        mkdir -p ~root/.ssh
        cp ~vagrant/.ssh/auth* ~root/.ssh
        yum install -y mdadm smartmontools hdparm gdisk
        cp /vagrant/mkraid6.sh /home/vagrant
      SHELL
    end

    # --- cleanup after "destroy" action
    config.trigger.after :destroy do |trigger|
      trigger.name = "Cleanup operation"
      trigger.ruby do
        # --- the following loop is now obsolete as these files will be removed automatically as machine dependency
        boxconfig[:disks].each do |_, dconf|
          if File.exist?(dconf[:dfile])
            puts "Deleting \"#{dconf[:dfile]}\" disk"
            system("vboxmanage closemedium disk #{dconf[:dfile]} --delete")
          end
        end
      end
    end
  end
end
